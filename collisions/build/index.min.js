function satCollision(e,t){const o=[...e.edges.map((e=>createVector(-e.y,e.x).normalize())),...t.edges.map((e=>createVector(-e.y,e.x).normalize()))];let i=1/0,s=null;for(let r=0;r<o.length;r++){normal=o[r];let l=1/0,c=-1/0;e.vertices.forEach((e=>{l=min(l,p5.Vector.dot(normal,e)),c=max(c,p5.Vector.dot(normal,e))}));let n=1/0,a=-1/0;if(t.vertices.forEach((e=>{n=min(n,p5.Vector.dot(normal,e)),a=max(a,p5.Vector.dot(normal,e))})),n>c||a<l)return null;min(c,a)-max(l,n)<i&&(i=min(c,a)-max(l,n),s=normal),i=min(i,min(c,a)-max(l,n))}let r=t.centre.copy().sub(e.centre).normalize();return p5.Vector.dot(r,s)<0&&s.mult(-1),{mtv:s.mult(i),collisionPoints:getCollisionPoints(e,t)}}function getCollisionPoints(e,t){let o=[];return e.vertices.forEach(((e,i)=>{isPointInsidePolygon(e,t.vertices)&&o.push({polygon:1,pointIndex:i})})),t.vertices.forEach(((t,i)=>{isPointInsidePolygon(t,e.vertices)&&o.push({polygon:2,pointIndex:i})})),o}function isPointInsidePolygon(e,t){let o=t.length,i=e.y,s=e.x,r=0;for(let e=0;e<o;e++){let l=t[e].x,c=t[e].y,n=t[(e+1)%o].x,a=t[(e+1)%o].y;if(c>a&&([l,c,n,a]=[n,a,l,c]),i>c&&i<=a){l+(i-c)*(n-l)/(a-c)>=s&&r++}}return r%2!=0}function staticResolve(e,t,o){let i=o.copy().mult(.5),s=o.copy().mult(-.5),r=o.copy().mult(-1),l=e.movable,c=t.movable,n=e.mass,a=t.mass,h=n+a;l&&c?(e.moveBy(s.mult(a/h)),t.moveBy(i.mult(n/h))):l?e.moveBy(r):c&&t.moveBy(o)}function linearResolve(e,t,o){staticResolve(e,t,o);let i=o.copy().normalize(),s=t.velocity.copy().sub(e.velocity).dot(i);if(s>=0)return;let r=s*(1+min(e.elasticity,t.elasticity))/(e.invMass+t.invMass),l=i.copy().mult(r);e.movable&&e.applyImpulse(l),t.movable&&t.applyImpulse(l.mult(-1))}function dynamicResolve(e,t,o,i){staticResolve(e,t,o),i=i.map((o=>1===o.polygon?e.vertices[o.pointIndex]:t.vertices[o.pointIndex]));let s=[],r=o.copy().normalize(),l=min(e.elasticity,t.elasticity);for(let o of i){let c=o.copy().sub(e.centre),n=o.copy().sub(t.centre),a=createVector(-c.y,c.x),h=createVector(-n.y,n.x),m=p5.Vector.mult(a,e.angularVelocity),y=p5.Vector.mult(h,t.angularVelocity),p=p5.Vector.add(t.velocity,y).sub(p5.Vector.add(e.velocity,m)).dot(r);if(p>=0)continue;let u=p*(1+l),d=p5.Vector.dot(a,r),g=p5.Vector.dot(h,r),v=u/(e.invMass+t.invMass+d*d*e.invMomentOfInertia+g*g*t.invMomentOfInertia);v/=i.length;let f=r.copy().mult(v);s.push({cPoint:o,impulse:f})}s.forEach((o=>{e.movable&&(e.applyRotationImpulse(o.impulse,o.cPoint),e.applyImpulse(o.impulse)),t.movable&&(o.impulse.mult(-1),t.applyRotationImpulse(o.impulse,o.cPoint),t.applyImpulse(o.impulse))}))}const primaryColor="#fff4d6",secondaryColor="#908a76";class Polygon{constructor({centre:e,numVertices:t,distFromCentre:o,vertices:i,mass:s,maxSpeed:r,elasticity:l,controllable:c=!1,movable:n=!0}){this.color=n?"#908a76":color(50),this.defaultColor=this.color,this.movable=n,this.controllable=c,this.maxSpeed=r,this.facingDir=createVector(0,0),this.centre=e,this.distFromCentre=o,this.numVertices=t,this.vertices=i,this.createShape(),this.mass=s,this.invMass=s===1/0?0:1/s,this.elasticity=l,this.force=createVector(0,0),this.velocity=createVector(0,0),this.angularVelocity=0,this.torque=0,this.area=this.calculateArea(),this.momentOfInertia=this.calculateMomentOfInertia(),this.momentOfInertia=this.momentOfInertia<15e3?15e3:this.momentOfInertia,this.invMomentOfInertia=1/this.momentOfInertia}calculateArea(){let e=0,t=this.vertices.map((e=>e.copy().sub(this.centre))),o=t.length;for(let i=0;i<o;i++)e+=abs(t[i].x*t[(i+1)%o].y-t[i].y*t[(i+1)%o].x);return e/2}calculateMomentOfInertia(){let e=0,t=this.mass/this.area,o=this.vertices.map((e=>e.copy().sub(this.centre))),i=o.length;for(let t=0;t<i;t++){let s=o[t].x,r=o[t].y,l=o[(t+1)%i].x,c=o[(t+1)%i].y;e+=(s*c-l*r)*(s*s+s*l+l*l+r*r+r*c+c*c)}return e*t/12}createShape(){if(this.vertices)this.vertices=this.vertices;else{let e=[],t=2*PI/this.numVertices,o=0,i=this.controllable?0:t;for(let s=0;s<this.numVertices;s++)e.push(random(o,i)),o+=t,i+=t;this.vertices=[];for(let t=0;t<this.numVertices;t++){let o=createVector(this.centre.x+this.distFromCentre*cos(e[t]),this.centre.y+this.distFromCentre*sin(e[t]));this.vertices.push(o)}}this.facingDir=this.vertices[0].copy().sub(this.centre).normalize(),this.calculateEdges()}calculateEdges(){this.edges=[];for(let e=0;e<this.vertices.length;e++){let t=(e+1)%this.vertices.length;this.edges.push(this.vertices[t].copy().sub(this.vertices[e]))}}draw(){stroke("#fff4d6"),strokeWeight(1),fill(this.color),beginShape();for(let e=0;e<this.numVertices;e++)vertex(this.vertices[e].x,this.vertices[e].y);endShape(CLOSE),this.controllable&&line(this.centre.x,this.centre.y,this.vertices[0].x,this.vertices[0].y)}update(){if(this.movable){this.velocity.add(p5.Vector.mult(this.force,this.invMass)),this.centre.add(this.velocity);for(let e=0;e<this.vertices.length;e++)this.vertices[e].add(this.velocity),this.vertices[e]=this.vertices[e].copy().sub(this.centre).rotate(this.angularVelocity).add(this.centre);this.facingDir=this.vertices[0].copy().sub(this.centre).normalize(),this.calculateEdges(),this.force.set(0,0),this.angularVelocity=0}this.draw()}applyForce(e){this.movable&&this.force.add(e)}applyImpulse(e){this.movable&&this.velocity.add(p5.Vector.mult(e,this.invMass))}applyRotationImpulse(e,t){this.angularVelocity+=p5.Vector.cross(p5.Vector.sub(t,this.centre),e).z*this.invMomentOfInertia}moveBy(e){this.centre.add(e);for(let t=0;t<this.vertices.length;t++)this.vertices[t].add(e);this.calculateEdges()}move(){let e=0,t=0;keyIsDown(87)&&(e+=5),keyIsDown(83)&&(e-=5),keyIsDown(65)&&(t-=PI/48),keyIsDown(68)&&(t+=PI/48),this.applyForce(this.facingDir.copy().mult(e));for(let e=0;e<this.vertices.length;e++){this.vertices[e].sub(this.centre).rotate(t).add(this.centre)}this.facingDir=this.vertices[0].copy().sub(this.centre).normalize(),this.calculateEdges()}}const bgColor="#070831";let polygonCount=5,manuallyAddedPolygons=5,polygons=[],controllablePolygon=null,gravity=null;function windowResized(){createCanvas(windowWidth/2,windowHeight),background(bgColor)}function setup(){createCanvas(windowWidth/2,windowHeight),gravity=createVector(0,.98),polygons.push(new Polygon({centre:createVector(300,300),numVertices:5,distFromCentre:50,mass:100,maxSpeed:3,elasticity:.5,controllable:!0}));for(let e=0;e<polygonCount-manuallyAddedPolygons;e++)polygons.push(new Polygon({centre:createVector(random(50,windowWidth-50),random(100,windowHeight-100)),numVertices:Math.floor(random(3,10)),distFromCentre:random(20,30),mass:random(5,100),maxSpeed:random(5,10),elasticity:.5,controllable:!0}));polygons.push(new Polygon({centre:createVector(200,height/2-125),numVertices:4,distFromCentre:100,vertices:[createVector(50,height/2-200),createVector(350,height/2-100),createVector(350,height/2-50),createVector(50,height/2-150)],mass:1e4,maxSpeed:0,elasticity:.5,movable:!1})),polygons.push(new Polygon({centre:createVector(550,height/2),numVertices:4,distFromCentre:100,vertices:[createVector(700,height/2-50),createVector(400,height/2+100),createVector(400,height/2+50),createVector(700,height/2-100)],mass:1e4,maxSpeed:0,elasticity:.5,movable:!1})),polygons.push(new Polygon({centre:createVector(5,(height/2-height+101)/2),numVertices:4,distFromCentre:width/2,vertices:[createVector(-10,height/2),createVector(5,height/2),createVector(5,height-101),createVector(-10,height-101)],mass:1e4,maxSpeed:0,elasticity:.5,movable:!1})),polygons.push(new Polygon({centre:createVector(width/2,height),numVertices:4,distFromCentre:width/2,vertices:[createVector(-10,height-100),createVector(width+10,height-100),createVector(width+10,height+10),createVector(-10,height+10)],mass:1e4,maxSpeed:0,elasticity:.5,movable:!1})),polygons.push(new Polygon({centre:createVector(width+5,(height/2-height+101)/2),numVertices:4,distFromCentre:width/2,vertices:[createVector(width-5,height/2),createVector(width+10,height/2),createVector(width+10,height-101),createVector(width-5,height-101)],mass:1e4,maxSpeed:0,elasticity:.5,movable:!1})),controllablePolygon=polygons[0]}function draw(){background(bgColor),mouseIsPressed&&(strokeWeight(5),line(controllablePolygon.centre.x,controllablePolygon.centre.y,mouseX,mouseY),polygons[polygons.length-1].numVertices<4&&console.log("aiusbfwer"),polygonCount++);for(let e of polygons)collisionCheck(),e.applyForce(gravity.copy().mult(e.mass)),e.update();controllablePolygon&&controllablePolygon.move(),displayFPS()}function displayFPS(){fill(255),textSize(16),textAlign(RIGHT,TOP),text("FPS: "+Math.round(frameRate()),width-10,10)}function collisionCheck(){for(let e=0;e<polygonCount;e++)for(let t=e+1;t<polygonCount;t++){let{mtv:o,collisionPoints:i}=satCollision(polygons[e],polygons[t])??{};o&&collisionResolution(polygons[e],polygons[t],o,i)}}function collisionResolution(e,t,o,i){dynamicResolve(e,t,o,i)}function touchEnded(){controllablePolygon&&controllablePolygon.applyImpulse(p5.Vector.sub(createVector(mouseX,mouseY),controllablePolygon.centre))}