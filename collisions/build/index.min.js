function satCollision(e,o){const t=[...e.edges.map((e=>createVector(-e.y,e.x))),...o.edges.map((e=>createVector(-e.y,e.x)))];for(let s=0;s<t.length;s++){normal=t[s];let r=1/0,i=-1/0;e.vertices.forEach((e=>{r=min(r,p5.Vector.dot(normal,e)),i=max(i,p5.Vector.dot(normal,e))}));let l=1/0,n=-1/0;if(o.vertices.forEach((e=>{l=min(l,p5.Vector.dot(normal,e)),n=max(n,p5.Vector.dot(normal,e))})),l>i||n<r)return!1}return!0}class Polygon{constructor(e,o,t,s,r){this.mass=s,this.rotation=0,this.color=color(7,8,49),this.defaultColor=color(7,8,49),this.maxSpeed=r,this.centre=e,this.distFromCentre=t,this.numVertices=o,this.createShape(o)}createShape(){let e=[];for(let o=0;o<this.numVertices;o++)e.push(random(TWO_PI));e.sort(),this.vertices=[];for(let o=0;o<this.numVertices;o++){let t=createVector(this.centre.x+this.distFromCentre*cos(e[o]),this.centre.y+this.distFromCentre*sin(e[o]));this.vertices.push(t)}this.calculateEdges()}calculateEdges(){this.edges=[];for(let e=1;e<this.numVertices;e++){let o=this.vertices[e].copy().sub(this.vertices[e-1]);this.edges.push(o)}let e=this.vertices[0].copy().sub(this.vertices[this.numVertices-1]);this.edges.push(e)}draw(){stroke(this.color),fill(this.color),beginShape();for(let e=0;e<this.numVertices;e++)vertex(this.vertices[e].x,this.vertices[e].y);endShape()}move(){let e=0,o=0;keyIsDown(87)&&(o-=2),keyIsDown(83)&&(o+=2),keyIsDown(65)&&(e-=2),keyIsDown(68)&&(e+=2);let t=createVector(e,o).normalize().mult(this.maxSpeed);this.centre.add(t);for(let e of this.vertices)e.add(t)}update(){this.draw()}colliding(){this.color=color(255,0,0)}notColliding(){this.color=color(7,8,49)}isMouseInside(){let e=!1;return dist(mouseX,mouseY,this.centre.x,this.centre.y)<=this.distFromCentre?(e=!0,this.color=color(200,8,49)):this.color=color(7,8,49),e}}const bgColor="#070831",primaryColor="#fff4d6",secondaryColor="#908a76";let polygonCount=2,polygons=[],selectedPolygon=null;function windowResized(){background(bgColor)}function setup(){createCanvas(800,500),fill(100),polygons.push(new Polygon(createVector(300,300),5,100,2,3)),polygons.push(new Polygon(createVector(100,100),7,50,3,5))}function mousePressed(){for(let e of polygons)if(e.isMouseInside()){selectedPolygon=e;break}}function draw(){background(220),collisionCheck(),selectedPolygon&&selectedPolygon.move();for(let e of polygons)e.update()}function collisionCheck(){let e=new Set;for(let o=0;o<polygonCount;o++){polygons[o].notColliding();for(let t=o+1;t<polygonCount;t++)satCollision(polygons[o],polygons[t])&&(e.add(o),e.add(t))}e.forEach((e=>polygons[e].colliding()))}function collisionResolution(e,o){}