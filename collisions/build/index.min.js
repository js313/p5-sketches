function satCollision(e,t){const o=[...e.edges.map((e=>createVector(-e.y,e.x).normalize())),...t.edges.map((e=>createVector(-e.y,e.x).normalize()))];let i=1/0,s=null;for(let r=0;r<o.length;r++){normal=o[r];let l=1/0,c=-1/0;e.vertices.forEach((e=>{l=min(l,p5.Vector.dot(normal,e)),c=max(c,p5.Vector.dot(normal,e))}));let n=1/0,a=-1/0;if(t.vertices.forEach((e=>{n=min(n,p5.Vector.dot(normal,e)),a=max(a,p5.Vector.dot(normal,e))})),n>c||a<l)return null;min(c,a)-max(l,n)<i&&(i=min(c,a)-max(l,n),s=normal),i=min(i,min(c,a)-max(l,n))}let r=t.centre.copy().sub(e.centre).normalize();return p5.Vector.dot(r,s)<0&&s.mult(-1),s.mult(i)}function staticResolve(e,t,o){let i=o.copy().mult(.5),s=o.copy().mult(-.5),r=o.copy().mult(-1),l=e.movable,c=t.movable,n=e.mass,a=t.mass,h=n+a;l&&c?(e.moveBy(s.mult(a/h)),t.moveBy(i.mult(n/h))):l?e.moveBy(r):c&&t.moveBy(o)}function linearResolve(e,t,o){let i=o.copy().normalize(),s=t.velocity.copy().sub(e.velocity).dot(i);if(s>=0)return;let r=s*(1+min(e.elasticity,t.elasticity))/(e.invMass+t.invMass),l=i.copy().mult(r);e.movable&&e.applyImpulse(l),t.movable&&t.applyImpulse(l.mult(-1))}const primaryColor="#fff4d6",secondaryColor="#908a76";class Polygon{constructor({centre:e,numVertices:t,distFromCentre:o,vertices:i,mass:s,maxSpeed:r,elasticity:l,controllable:c=!1,movable:n=!0}){this.color=n?"#908a76":color(50),this.defaultColor=this.color,this.movable=n,this.controllable=c,this.maxSpeed=r,this.facingDir=createVector(0,0),this.centre=e,this.distFromCentre=o,this.numVertices=t,this.vertices=i,this.createShape(),this.mass=s,this.invMass=s===1/0?0:1/s,this.elasticity=l,this.force=createVector(0,0),this.velocity=createVector(0,0)}createShape(){if(this.vertices)this.vertices=this.vertices;else{let e=[],t=2*PI/this.numVertices,o=0,i=this.controllable?0:t;for(let s=0;s<this.numVertices;s++)e.push(random(o,i)),o+=t,i+=t;this.vertices=[];for(let t=0;t<this.numVertices;t++){let o=createVector(this.centre.x+this.distFromCentre*cos(e[t]),this.centre.y+this.distFromCentre*sin(e[t]));this.vertices.push(o)}}this.facingDir=this.vertices[0].copy().sub(this.centre).normalize(),this.calculateEdges()}calculateEdges(){this.edges=[];for(let e=0;e<this.vertices.length;e++){let t=(e+1)%this.vertices.length;this.edges.push(this.vertices[t].copy().sub(this.vertices[e]))}}draw(){stroke("#fff4d6"),strokeWeight(1),fill(this.color),beginShape();for(let e=0;e<this.numVertices;e++)vertex(this.vertices[e].x,this.vertices[e].y);endShape(CLOSE),this.controllable&&line(this.centre.x,this.centre.y,this.vertices[0].x,this.vertices[0].y)}update(){if(this.movable){this.velocity.add(p5.Vector.mult(this.force,this.invMass)),this.centre.add(this.velocity);for(let e of this.vertices)e.add(this.velocity);this.facingDir=this.vertices[0].copy().sub(this.centre).normalize(),this.calculateEdges(),this.force.set(0,0)}this.draw()}applyForce(e){this.movable&&this.force.add(e)}applyImpulse(e){this.movable&&this.velocity.add(p5.Vector.mult(e,this.invMass))}moveBy(e){this.centre.add(e);for(let t=0;t<this.vertices.length;t++)this.vertices[t].add(e);this.calculateEdges()}move(){let e=0,t=0;keyIsDown(87)&&(e+=5),keyIsDown(83)&&(e-=5),keyIsDown(65)&&(t-=PI/48),keyIsDown(68)&&(t+=PI/48),this.applyForce(this.facingDir.copy().mult(e));for(let e=0;e<this.vertices.length;e++){this.vertices[e].sub(this.centre).rotate(t).add(this.centre)}this.facingDir=this.vertices[0].copy().sub(this.centre).normalize(),this.calculateEdges()}}const bgColor="#070831";let polygonCount=10,manuallyAddedPolygons=4,polygons=[],controllablePolygon=null,gravity=null;function windowResized(){createCanvas(windowWidth,windowHeight),background(bgColor)}function setup(){createCanvas(windowWidth,windowHeight),gravity=createVector(0,10),polygons.push(new Polygon({centre:createVector(300,300),numVertices:5,distFromCentre:50,mass:100,maxSpeed:3,elasticity:.5,controllable:!0}));for(let e=0;e<polygonCount-manuallyAddedPolygons;e++)polygons.push(new Polygon({centre:createVector(random(50,windowWidth-50),random(100,windowHeight-100)),numVertices:Math.floor(random(3,10)),distFromCentre:random(20,30),mass:random(5,100),maxSpeed:random(5,10),elasticity:.5}));polygons.push(new Polygon({centre:createVector(5,(height/2-height+101)/2),numVertices:4,distFromCentre:width/2,vertices:[createVector(-10,height/2),createVector(5,height/2),createVector(5,height-101),createVector(-10,height-101)],mass:1e4,maxSpeed:0,elasticity:.5,movable:!1})),polygons.push(new Polygon({centre:createVector(width/2,height),numVertices:4,distFromCentre:width/2,vertices:[createVector(-10,height-100),createVector(width+10,height-100),createVector(width+10,height+10),createVector(-10,height+10)],mass:1e4,maxSpeed:0,elasticity:.5,movable:!1})),polygons.push(new Polygon({centre:createVector(width+5,(height/2-height+101)/2),numVertices:4,distFromCentre:width/2,vertices:[createVector(width-5,height/2),createVector(width+10,height/2),createVector(width+10,height-101),createVector(width-5,height-101)],mass:1e4,maxSpeed:0,elasticity:.5,movable:!1})),controllablePolygon=polygons[0]}function draw(){background(bgColor),mouseIsPressed&&(strokeWeight(5),line(controllablePolygon.centre.x,controllablePolygon.centre.y,mouseX,mouseY));for(let e of polygons)collisionCheck(),e.applyForce(gravity),e.update();controllablePolygon&&controllablePolygon.move(),displayFPS()}function displayFPS(){fill(255),textSize(16),textAlign(RIGHT,TOP),text("FPS: "+Math.round(frameRate()),width-10,10)}function collisionCheck(){for(let e=0;e<polygonCount;e++)for(let t=e+1;t<polygonCount;t++){let o=satCollision(polygons[e],polygons[t]);o&&collisionResolution(polygons[e],polygons[t],o)}}function collisionResolution(e,t,o){staticResolve(e,t,o),linearResolve(e,t,o)}function touchEnded(){controllablePolygon&&controllablePolygon.applyImpulse(p5.Vector.sub(createVector(mouseX,mouseY),controllablePolygon.centre))}